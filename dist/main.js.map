{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js_project/./src/scripts/video.js","webpack://js_project/./src/scripts/picture.js","webpack://js_project/./src/scripts/utils.js","webpack://js_project/./src/index.js","webpack://js_project/./src/scripts/reel.js","webpack://js_project/./src/scripts/hitbox.js","webpack://js_project/./src/scripts/sticker.js"],"sourcesContent":["class Video {\n    constructor (width, height) {\n        this.width = width;\n        this.height = height;\n        this.playing = false;\n    }\n\n    startVideo () {\n        const constraints = {\n            audio: false,\n            video: { width: this.width, height: this.height }\n        };\n\n        navigator.mediaDevices.getUserMedia(constraints)\n            .then(this.success.bind(this))\n            .catch(this.error)\n    }\n\n    success (stream) {\n        this.playing = true;\n        let video = document.getElementById('video');\n        video.srcObject = stream;\n    }\n\n    error (error) {\n        console.log(error);\n    }\n\n    stopVideo () {\n        let video = document.getElementById('video');\n        const stream = video.srcObject;\n        const tracks = stream.getTracks();\n\n        tracks.forEach((track) => {\n            track.stop();\n        });\n\n        video.srcObject = null;\n        this.playing = false;\n    }\n}\n\nexport default Video;","class Picture {\n    constructor (video, canvasFrame, videoWidth, videoHeight) {\n        this.video = video;\n        this.canvasFrame = canvasFrame;\n        this.videoWidth = videoWidth;\n        this.videoHeight = videoHeight;\n    }\n\n    takePicture () {\n        this.canvasFrame.width = 160;\n        this.canvasFrame.height = 120;\n        let canvasContext = this.canvasFrame.getContext('2d');\n        canvasContext.drawImage(this.video, 0, 0, this.videoWidth, this.videoHeight, 0, 0, this.width, this.height);\n    }\n\n    offpageCopy(canvas) {\n        canvas.width = this.videoWidth;\n        canvas.height = this.videoHeight;\n        let canvasContext = canvas.getContext('2d');\n        canvasContext.drawImage(this.video, 0, 0, this.videoWidth, this.videoHeight);\n    }\n}\n\nexport default Picture;","export function setPlaceholders() {\n    const reelFrames = document.getElementsByClassName('reel-frame');\n    for(let i = 0; i < reelFrames.length; i++) {\n        reelFrames[i].width = 300;\n        reelFrames[i].height = 225;\n        let canvasContext = reelFrames[i].getContext('2d');\n        // canvasContext.imageSmoothingEnabled = false;\n        let placeholderImage = new Image();\n        placeholderImage.src = `./assets/Placeholder_${i+1}.jpg`;\n        placeholderImage.onload = function(){\n            canvasContext.drawImage(placeholderImage, 0, 0, 300, 225);\n        }\n    }\n}\n","import Video from \"./scripts/video\";\nimport Picture from \"./scripts/picture\";\nimport Reel from \"./scripts/reel\";\nimport Hitbox from \"./scripts/hitbox\";\nimport { setPlaceholders } from \"./scripts/utils\";\n\n//set placeholder images\nsetPlaceholders();\n\n//get button that will start video\nconst startVideoButton = document.getElementById('start-video-btn');\nconst videoWidth = 610;\nconst videoHeight = 469;\n\n//start video on click\n// const video = new Video(videoWidth, videoHeight);\n// const stream = document.getElementById('video');\n// startVideoButton.addEventListener('click', (e) => {\n//     if(video.playing === true) {\n//         video.stopVideo();\n//     } else {\n//         video.startVideo();\n//     }\n// })\n\n//get button that will take multiple pictures\nconst multipleCaptureButton = document.getElementById('multi-capture-btn');\n\nconst pictureCount = document.getElementById('picture-count');\nconst countdownTimer = document.getElementById('countdown');\n\nconst flashElement = document.getElementById('flash');\n\n//get all canvas elements with class of small-frame\nconst offpageCanvasArray = document.getElementsByClassName('offpage-frame');\nconst textarea = document.getElementById('caption');\n\nconst video = new Video(videoWidth, videoHeight);\nconst stream = document.getElementById('video');\n\nconst reelDiv = document.getElementById('reel');\n\nif(video.playing != true) {\n    video.startVideo();\n}\n\nmultipleCaptureButton.addEventListener('click', (e) => {\n    //delay function that returns promise after x ms\n    function delay(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    //take as many photos as there are canvases on a delay of x ms\n    async function takePhotos() {\n        reelDiv.style.visibility = \"hidden\";\n        stream.style.visibility = \"visible\";\n        textarea.style.display = \"none\";\n        multipleCaptureButton.disabled = true;\n\n        let pCount = 1;\n        pictureCount.innerText = `${pCount} / 4`;\n        \n        for(let i = 0; i < offpageCanvasArray.length; i++) {\n            flashElement.style.visibility = 'hidden';\n            flashElement.classList.remove('flash');\n            let count = 3;\n            countdownTimer.innerText = count;\n            let timer = setInterval(() => {\n                count --;\n                if(count < 1) count = 1;\n                countdownTimer.innerText = count;\n            }, 1000);\n\n            await(delay(3500));\n            flashElement.style.visibility = 'visible';\n            flashElement.classList.add('flash');\n            await(delay(500));\n\n            \n            clearInterval(timer);\n            pCount++;\n            pictureCount.innerText = `${pCount} / 4`;\n\n\n            let offpageHolder = new Picture(stream, frames[i], videoWidth, videoHeight);\n            offpageHolder.offpageCopy(offpageCanvasArray[i]);\n        }\n        textarea.style.display = 'block';\n        countdownTimer.innerText = \"\";\n        pictureCount.innerText = \"\";\n\n        flashElement.style.visibility = 'hidden';\n        flashElement.classList.remove('flash');\n        reelDiv.style.visibility = \"visible\";\n        reelDiv.style.zIndex = 0;\n        stream.style.visibility = \"hidden\";\n        multipleCaptureButton.disabled = false;\n\n        createReel();\n    }\n    if(video.playing) takePhotos();\n})\n\n\n\n//create reel - stop video first, then fill canvases \nconst createReel = function() {\n    let reel = new Reel(offpageCanvasArray, videoWidth, videoHeight);\n    reel.generateReel();\n}\n\nconst frameList = document.getElementById('frame-list');\nconst backgroundCanvas = document.getElementById('background-canvas');\n// const frame1 = document.getElementById('frame-list').firstChild;\nlet selectedFrame = document.getElementById('start-frame');\nbackgroundCanvas.width = 800;\nbackgroundCanvas.height = 650;\n//load image and set background-canvas to image\nlet canvasContext = backgroundCanvas.getContext('2d');\n// canvasContext.imageSmoothingEnabled = false;\nlet backgroundImage = new Image();\nbackgroundImage.src = `./assets/frame_${selectedFrame.dataset.frame}.png`;\nbackgroundImage.onload = function(){\n    canvasContext.drawImage(backgroundImage, 0, 0, 800, 650);\n}\n\nframeList.addEventListener('click', (e) => {\n    //check if clicked element is an image\n    if(e.target.tagName === 'IMG') {\n        if(selectedFrame) {\n            selectedFrame.classList.remove('selected-frame');\n        }\n        e.target.classList.add('selected-frame');\n        selectedFrame = e.target;\n\n        backgroundCanvas.width = 800;\n        backgroundCanvas.height = 650;\n        //load image and set background-canvas to image\n        let canvasContext = backgroundCanvas.getContext('2d');\n        // canvasContext.imageSmoothingEnabled = false;\n        let backgroundImage = new Image();\n        backgroundImage.src = `./assets/frame_${e.target.dataset.frame}.png`;\n        backgroundImage.onload = function(){\n            canvasContext.drawImage(backgroundImage, 0, 0, 800, 650);\n        }\n    }\n});\n\n\nconst stickerList = document.getElementById('sticker-list');\nconst stickerCanvas = document.getElementById('sticker-canvas');\n\nstickerCanvas.width = 800;\nstickerCanvas.height = 525;\n\nconst stickerArray = [];\n\nstickerList.addEventListener('click', (e) => {\n    if(e.target.parentNode.tagName === 'LI') {\n        let stickerType = e.target.dataset.type;\n        let hitbox = new Hitbox(stickerCanvas, stickerType);\n        stickerArray.push(hitbox);\n    }\n});\n\nlet dragging;\n\nstickerCanvas.addEventListener('mousedown', (e) => {\n    let pos = getMousePos(stickerCanvas, e);\n    for(let i = 0; i < stickerArray.length; i++) {\n        if(stickerArray[i].hit(pos.x, pos.y)) {\n            let hitbox = stickerArray[i];\n            const context = stickerCanvas.getContext('2d');\n            dragging = ((e) => {\n                pos = getMousePos(stickerCanvas, e);\n                hitbox.posX = pos.x;\n                hitbox.posY = pos.y;\n                context.clearRect(0, 0, stickerCanvas.width, stickerCanvas.height);\n                for(let j = 0; j < stickerArray.length; j++) {\n                    stickerArray[j].drawSticker();\n                }\n            });\n            stickerCanvas.addEventListener('mousemove', dragging);\n            break;\n        }\n    }\n});\n\nstickerCanvas.addEventListener('mouseup', (e) => {\n    stickerCanvas.removeEventListener('mousemove', dragging);\n});\n\nfunction getMousePos(canvas, evt) {\n    var rect = canvas.getBoundingClientRect();\n    return {\n      x: evt.clientX - rect.left,\n      y: evt.clientY - rect.top\n    };\n}\n\nconst textColorSelect = document.getElementById('text-color-select');\nconst textFontSelect = document.getElementById('text-font-select');\n\ntextColorSelect.addEventListener('click', (e) => {\n    if(e.target.tagName === 'LI') {\n        textarea.style.color = e.target.dataset.color;\n    }\n});\n\ntextFontSelect.addEventListener('click', (e) => {\n    if(e.target.tagName === 'LI') {\n        textarea.style.fontFamily = e.target.dataset.font;\n    }\n});\n\n\n// const downloadButton = document.getElementById(\"create-download-btn\");\n// const reelFrames = document.getElementsByClassName('reel-frame');\n\n// function createDownloadable(backgroundCanvas, stickerCanvas, reelCanvasArray, downloadButton) {\n//     let finalCanvas = document.getElementById('offpageDownload');\n//     finalCanvas.width = 740;\n//     finalCanvas.height = 650;\n//     let finalContext = finalCanvas.getContext('2d');\n//     finalContext.drawImage(backgroundCanvas, 0, 0);\n\n//     let image = finalCanvas.toDataURL(\"image/png\");\n//     downloadButton.href = image;\n// }\n\n// const downloadLink = document.getElementById('download');\n\n// downloadButton.addEventListener(\"click\", (e) => {\n//     createDownloadable(backgroundCanvas, stickerCanvas, reelFrames, downloadLink);\n// })","class Reel {\n    constructor (offpageCanvasArray, offpageCanvasWidth, offpageCanvasHeight) {\n        this.offpageCanvasArray = offpageCanvasArray;\n        this.reelFrames = document.getElementsByClassName('reel-frame');\n        this.offpageCanvasWidth = offpageCanvasWidth;\n        this.offpageCanvasHeight = offpageCanvasHeight;\n    }\n\n    generateReel() {\n        for(let i = 0; i < this.offpageCanvasArray.length; i++) {\n            this.reelFrames[i].width = 300;\n            this.reelFrames[i].height = 225;\n            let canvasContext = this.reelFrames[i].getContext('2d');\n            canvasContext.drawImage(this.offpageCanvasArray[i], 0, 0, this.offpageCanvasWidth, this.offpageCanvasHeight, 0, 0, 300, 225);\n        }\n    }\n}\n\nexport default Reel;","import Sticker from './sticker';\n\nclass Hitbox {\n    constructor(canvas, stickerType) {\n        this.stickerType = stickerType;\n        this.canvas = canvas;\n        this.width = 75;\n        this.height = 75;\n        this.posX = 0;\n        this.posY = 0;\n        this.sticker = new Sticker(this.canvas, this.posX, this.posY, stickerType);\n        this.drawSticker();\n    }\n\n    drawSticker() {\n        this.sticker.drawSticker(this.posX, this.posY);\n    }\n\n    hit(mouseX, mouseY) {\n        let rightBound = this.posX + this.width;\n        let bottomBound = this.posY + this.height;\n        if(mouseX > this.posX && mouseX < rightBound && mouseY > this.posY && mouseY < bottomBound) return true;\n    }\n}\n\nexport default Hitbox;\n","class Sticker {\n    constructor(canvas, x, y, stickerType) {\n        this.canvas = canvas;\n        this.x = x;\n        this.y = y;\n        this.stickerType = stickerType;\n        this.stickerImage = new Image();\n        this.stickerImage.src = `./assets/sticker_${this.stickerType}.png`;\n    }\n\n    drawSticker(posX, posY) {\n        this.x = posX;\n        this.y = posY;\n        let canvasContext = this.canvas.getContext('2d');\n        canvasContext.drawImage(this.stickerImage, this.x, this.y, 75, 75 * this.stickerImage.height / this.stickerImage.width);\n    }\n}\n\nexport default Sticker;"],"names":["constructor","video","canvasFrame","videoWidth","videoHeight","this","takePicture","width","height","getContext","drawImage","offpageCopy","canvas","reelFrames","document","getElementsByClassName","i","length","canvasContext","placeholderImage","Image","src","onload","setPlaceholders","getElementById","multipleCaptureButton","pictureCount","countdownTimer","flashElement","offpageCanvasArray","textarea","playing","startVideo","constraints","audio","navigator","mediaDevices","getUserMedia","then","success","bind","catch","error","stream","srcObject","console","log","stopVideo","getTracks","forEach","track","stop","reelDiv","addEventListener","e","delay","ms","Promise","resolve","setTimeout","async","style","visibility","display","disabled","pCount","innerText","classList","remove","count","timer","setInterval","add","clearInterval","Picture","frames","zIndex","createReel","takePhotos","offpageCanvasWidth","offpageCanvasHeight","generateReel","frameList","backgroundCanvas","selectedFrame","backgroundImage","dataset","frame","target","tagName","stickerList","stickerCanvas","stickerArray","dragging","getMousePos","evt","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","parentNode","stickerType","type","hitbox","posX","posY","sticker","stickerImage","drawSticker","hit","mouseX","mouseY","rightBound","bottomBound","push","pos","context","clearRect","j","removeEventListener","textColorSelect","textFontSelect","color","fontFamily","font"],"sourceRoot":""}